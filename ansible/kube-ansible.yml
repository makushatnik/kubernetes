---
- hosts: control_plane,workers
  become: yes
  gather_facts: true

  tasks:
    - name: Create containerd config my_file
      file:
        path: "/etc/modules-load.d/containerd.conf"
        state: "touch"

    - name: Add conf for containerd 1
      blockinfile:
        path: "/etc/modules-load.d/containerd.conf"
        block: |
          overlay
          br_netfilter

    - name: modprobe
      shell: |
        modprobe overlay
        modprobe br_netfilter

    - name: Set system configurations for Kubernetes networking
      file:
        path: "/etc/sysctl.d/99-kubernetes-cri.conf"
        state: "touch"

    - name: Add conf for containerd 2
      blockinfile:
        path: "/etc/sysctl.d/99-kubernetes-cri.conf"
        block: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward = 1

    - name: Apply new settings
      command: sysctl --system

    - name: Install containerd
      shell: |
        apt-get update && apt-get install -y containerd
        mkdir -p /etc/containerd
        containerd config default | tee /etc/containerd/config.toml
        systemctl restart containerd

    - name: Remove swapfile from /etc/fstab
      mount:
        name: swap
        fstype: swap
        state: absent

    - name: Disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0

    - name: Install & Configure dependencies
      shell: |
        apt-get update && apt-get install -y apt-transport-https curl
        curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -

    - name: Create Kubernetes repo file
      file:
        path: "/etc/apt/sources.list.d/kubernetes.list"
        state: "touch"

    - name: Add K8s source
      blockinfile:
        path: "/etc/apt/sources.list.d/kubernetes.list"
        block: |
          deb https://apt.kubernetes.io/ kubernetes-xenial main

    - name: Install kubelet
      apt:
        name: kubelet=1.23.7-00
        state: present
        update_cache: true
        force: yes

    - name: Install kubeadm
      apt:
        name: kubeadm=1.23.7-00
        state: present
        force: yes

- hosts: control_plane
  become: yes
  tasks:
    - name: Install kubectl
      apt:
        name: kubectl=1.23.7-00
        state: present
        force: yes

    - name: Install Helm
      shell: |
        curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        chmod 500 get_helm.sh
        ./get_helm.sh


- name: Install Haproxy
  hosts: lb
  become: true
  gather_facts: true
  vars:
    my_file: /etc/haproxy/haproxy.cfg
    my_template: templates/haproxy.j2
  tasks:
    - name: Gather facts from the control_plane
      tags: ['control_plane']
      setup:
      delegate_to: "{{item}}"
      delegate_facts: True
      with_items: "{{groups['control_plane']}}"

    - name: Install Haproxy
      apt:
        name: haproxy
        state: present
        update_cache: true
        force: yes

    - name: Stop Haproxy service
      service:
        name: haproxy
        state: stopped

    - name: Create "{{my_file}}"
      ansible.builtin.template:
        src: "{{my_template}}"
        dest: "{{my_file}}"
        owner: root
        group: root
        mode: "0644"

    - name: Start Haproxy service
      service:
        name: haproxy
        state: started