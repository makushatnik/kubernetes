replicaCount: 1

image:
  repository: gcr.io/google-samples/microservices-demo/loadgenerator
  pullPolicy: IfNotPresent
  tag: "v0.8.1"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {
  "sidecar.istio.io/rewriteAppHttpProbers": "true"
}
podLabels: {}

podSecurityContext: {
  "fsGroup": 1000,
  "runAsUser": 1000,
  "runAsGroup": 1000,
  "runAsNonRoot": true
}

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  privileged: false
  readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


service:
  port: 80

ingress:
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: eshop.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: eshop-tls
  #    hosts:
  #      - eshop.local

env:
  frontend_srv:
  - name: FRONTEND_SRV
    valueFrom:
      configMapKeyRef:
        name: cmloadgenerator
        key: frontend_srv
  users:
  - name: USERS
    valueFrom:
      configMapKeyRef:
        name: cmloadgenerator
        key: user_count

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 300m
    memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
